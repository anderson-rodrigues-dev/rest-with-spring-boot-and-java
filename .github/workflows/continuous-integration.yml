name: Continuous Integration with Github Actions

on:
  push:
    branches: 
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR Private
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
        
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'adopt'
        cache: maven
        
    - name: Build Application JAR
      working-directory: ./rest-with-spring-boot-and-java
      run: mvn clean package

    - name: Docker Compose Build
      working-directory: ./
      run: docker compose build

    - name: Build, tag, and push docker image to Amazon ECR Public
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:latest ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:latest ${{ secrets.IMAGE_REPO_URL }}:latest
        
        docker push ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
        docker push ${{ secrets.IMAGE_REPO_URL }}:latest

    - name: Push to Docker Hub
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:latest ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:${{ github.run_id }}
        
        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:${{ github.run_id }}
        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot:latest
